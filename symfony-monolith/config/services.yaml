parameters:
    default_communication_rabbit_mq_exchange: 'communication-exchange'
    default_monolith_queue_rabbit_mq_exchange: 'monolith-exchange'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Component\Book\UI\Controller\:
        resource: '../src/Component/Book/UI/Controller'
        tags: ['controller.service_arguments']

    # Communication

    sync.http.category.communication:
        class: App\Infrastructure\Microservices\Communication\Sync\HttpCommunication
        public: true
        autowire: false
        arguments:
            - '@http_client'
            - '%env(resolve:CATEGORY_MICROSERVICE_URL)%'
            - 1

    # Queue

    async.rabbit_mq.default.queue_publisher:
        class: App\Infrastructure\Queue\RabbitMQQueuePublisher
        public: true
        autowire: false
        arguments:
            - '@PhpAmqpLib\Connection\AMQPStreamConnection'
            - '%default_monolith_queue_rabbit_mq_exchange%'
            - 1

    async.rabbit_mq.default.queue_consumer:
        class: App\Infrastructure\Queue\RabbitMQQueueConsumer
        public: true
        autowire: false
        arguments:
            - '@PhpAmqpLib\Connection\AMQPStreamConnection'
            - '%default_monolith_queue_rabbit_mq_exchange%'
            - 1

    # Consumer

    App\Infrastructure\Queue\Consumer\EventConsumerHandler:
        class: App\Infrastructure\Queue\Consumer\EventConsumerHandler
        public: true
        autowire: false
        arguments:
            - '@Symfony\Component\Serializer\SerializerInterface'
            - '@event_consumer.event_dispatcher'

    # Cli

    App\UI\CLI\EventQueueCommand:
        class: App\UI\CLI\EventQueueCommand
        public: true
        autowire: false
        arguments:
            - '@async.rabbit_mq.default.queue_consumer'
            - '@App\Infrastructure\Queue\Consumer\EventConsumerHandler'

    # Event listener

    App\Component\Book\Core\EventListener\BookCreatedLoggerEventListener:
        class: App\Component\Book\Core\EventListener\BookCreatedLoggerEventListener
        public: true
        autowire: false
        arguments:
            - '@monolog.logger.debug'
        tags:
            - { name: kernel.event_listener, event: book_created_sync, method: syncLog }
            - { name: kernel.event_listener, event: book_created_async, method: asyncLog }

    # Event publisher

    async.rabbit_mq.default.event_publisher:
        class: App\Infrastructure\EventDispatcher\EventPublisher\AsyncRabbitMQEventPublisher
        public: true
        autowire: false
        arguments:
            - '@async.rabbit_mq.default.queue_publisher'
            - '@Symfony\Component\Serializer\SerializerInterface'

    sync.symfony.event_publisher:
        class: App\Infrastructure\EventDispatcher\EventPublisher\SyncSymfonyEventPublisher

    async.symfony_from_rabbit_md.event_publisher:
        class: App\Infrastructure\EventDispatcher\EventPublisher\AsyncSymfonyFromRabbitMQEventPublisher


    # Event dispatcher

    event_consumer.event_dispatcher:
        class: App\Infrastructure\EventDispatcher\EventDispatcher
        public: true
        autowire: false
        arguments:
            - '@async.symfony_from_rabbit_md.event_publisher'

    create.book.event_dispatcher:
        class: App\Infrastructure\EventDispatcher\EventDispatcher
        public: true
        autowire: false
        arguments:
            - '@async.rabbit_mq.default.event_publisher'
            - '@sync.symfony.event_publisher'

    sync.symfony.event_dispatcher:
        class: App\Infrastructure\EventDispatcher\EventDispatcher
        public: true
        autowire: false
        arguments:
            - '@sync.symfony.event_publisher'

    # Use Case

    App\Component\Book\Core\UseCase\CreateBookApplicationService:
        class: App\Component\Book\Core\UseCase\CreateBookApplicationService
        public: true
        autowire: false
        arguments:
            - '@App\Component\Book\Core\Factory\BookFactory'
            - '@App\Component\Book\Core\Repository\BookRepository'
            - '@App\Infrastructure\UnityOfWork\UnityOfWork'
            - '@create.book.event_dispatcher'

    # API

    App\Component\Category\API\CategoryApiInterface:
        class: App\Component\Category\API\CategoryApi
        autowire: false
        public: true
        arguments:
            - '@sync.http.category.communication'

    # Other

    PhpAmqpLib\Connection\AMQPStreamConnection:
        class: PhpAmqpLib\Connection\AMQPStreamConnection
        autowire: false
        public: true
        arguments:
            - '%env(resolve:RABBITMQ_HOST)%'
            - '%env(resolve:RABBITMQ_PORT)%'
            - '%env(resolve:RABBITMQ_USER)%'
            - '%env(resolve:RABBITMQ_PASS)%'

    Symfony\Component\String\Slugger\AsciiSlugger:
        class: Symfony\Component\String\Slugger\AsciiSlugger
